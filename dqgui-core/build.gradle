plugins {
    id 'application'
    id 'com.github.spotbugs' version '2.0.1'
}


configurations {
    compile.transitive = true
    
    linux {
        description = 'linux classpath'
        extendsFrom compile
    }
    
    mac {
        description = 'mac classpath'
        extendsFrom compile
    }
    
    win {
        description ='win classpath'
        extendsFrom compile
    }
}

dependencies {
	//Local libs which have no maven repository
    implementation fileTree(dir: 'libs-local', include: ['*.jar'])
    
    //Subproject dependencies
    implementation project(":dqgui-framework")
    implementation project(":dqgui-execution")
    implementation project(":dqgui-database-support")
    
    rootProject.subprojects.findAll { 
    	prj -> if(prj.name.startsWith("database-"))
    		implementation project(":" + prj.name)
    }

	// https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: rootProject.gsonVersion

    // https://mvnrepository.com/artifact/org.fxmisc.richtext/richtextfx
    implementation group: 'org.fxmisc.richtext', name: 'richtextfx', version: '0.10.2'

    // https://mvnrepository.com/artifact/net.harawata/appdirs
    implementation group: 'net.harawata', name: 'appdirs', version: '1.0.3'

    // https://mvnrepository.com/artifact/se.sawano.java/alphanumeric-comparator
    implementation group: 'se.sawano.java', name: 'alphanumeric-comparator', version: '1.4.1'
	
	// https://mvnrepository.com/artifact/org.controlsfx/controlsfx
	implementation group: 'org.controlsfx', name: 'controlsfx', version: rootProject.controlsfxVersion
	
    // https://mvnrepository.com/artifact/commons-validator/commons-validator
    implementation group: 'commons-validator', name: 'commons-validator', version: rootProject.commonsValidatorVersion
	
	// https://mvnrepository.com/artifact/com.google.http-client/google-http-client
	implementation group: 'com.google.http-client', name: 'google-http-client', version: '1.34.2'
	
	// https://mvnrepository.com/artifact/org.java-websocket/Java-WebSocket
	implementation group: 'org.java-websocket', name: 'Java-WebSocket', version: '1.4.1'
	
	// Reason: ANTLR auto complete requires kotlin
	// https://mvnrepository.com/artifact/org.jetbrains.kotlin/kotlin-stdlib
	implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: '1.3.70'
	
	// https://mvnrepository.com/artifact/org.javers/javers-core
    implementation group: 'org.javers', name: 'javers-core', version: '5.8.13'
	
    // https://mvnrepository.com/artifact/com.github.spotbugs/spotbugs-annotations
    implementation group: 'com.github.spotbugs', name: 'spotbugs-annotations', version: '3.1.12'
    
    // Only for mocked public release
    implementation group: 'org.antlr', name: 'antlr4-runtime', version: '4.7.1'
    
    win "org.openjfx:javafx-media:13:win"
    win "org.openjfx:javafx-base:13:win"
    win "org.openjfx:javafx-controls:13:win"
    win "org.openjfx:javafx-fxml:13:win"
    win "org.openjfx:javafx-swing:13:win"
    win "org.openjfx:javafx-web:13:win"
    win "org.openjfx:javafx-graphics:13:win"
    
    linux "org.openjfx:javafx-media:13:linux"
    linux "org.openjfx:javafx-graphics:13:linux"
    linux "org.openjfx:javafx-base:13:linux"
    linux "org.openjfx:javafx-controls:13:linux"
    linux "org.openjfx:javafx-fxml:13:linux"
    linux "org.openjfx:javafx-swing:13:linux"
    linux "org.openjfx:javafx-web:13:linux"
    
    mac "org.openjfx:javafx-media:13:mac"
    mac "org.openjfx:javafx-graphics:13:mac"
    mac "org.openjfx:javafx-base:13:mac"
    mac "org.openjfx:javafx-controls:13:mac"
    mac "org.openjfx:javafx-fxml:13:mac"
    mac "org.openjfx:javafx-swing:13:mac"
    mac "org.openjfx:javafx-web:13:mac"
}

version = 'public-release'
new File(projectDir, "src/main/resources/dqgui/core/VERSION").text = version;

application {
    mainClassName = 'de.hshannover.dqgui.core.Starter'
}

spotbugs {
    ignoreFailures = false
    sourceSets = [sourceSets.main]
    effort = "max"
    includeFilter = file("config/spotbugs_ignore.xml")
}

tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports.xml.enabled = false
    reports.html.enabled = true
}

task('linuxJar', type: Jar) {
    appendix = "linux"
    from { configurations.linux.collect { it.isDirectory() ? it : zipTree(it) }}
}

task('macJar', type: Jar) {
    appendix = "mac"
    from { configurations.mac.collect { it.isDirectory() ? it : zipTree(it) }}
}

task('winJar', type: Jar) {
    appendix = "win"
    from { configurations.win.collect { it.isDirectory() ? it : zipTree(it) }}
}

configure([linuxJar, macJar, winJar]) {
    new File(projectDir, "src/main/resources/dqgui/documentation/LASTGEN").text = "Generated: " + new Date().format('dd.MM.yyyy HH:mm:ss')

	destinationDir rootProject.file('bin')
    baseName = "dqgui-core"
    
  	manifest {
        attributes(
            'Built-By'       : System.properties['user.name'],
            'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
            'Build-Revision' : version,
            'Created-By'     : "Gradle ${gradle.gradleVersion}",
            'Build-Jdk'      : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
            'Build-OS'       : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}",
            "Main-Class": "de.hshannover.dqgui.core.Starter"
        )
    }
    
    from {
        configurations.runtimeClasspath.filter({! (it.name =~ ".*javafx.*")}).collect { it.isDirectory() ? it : zipTree(it) }
    }
    
    from(rootProject.file('javaDocs')) {
    	into 'dqgui/documentation/javaDocs'
    }
    
    from(rootProject.file('projectDocs')) {
    	into 'dqgui/documentation/projectDocs'
    }
    
    with jar
}

jar {
  baseName = "dqgui-core-slim"
    
  manifest { 
    attributes "Main-Class": "de.hshannover.dqgui.core.Starter"
  }  
}

jar.dependsOn linuxJar, macJar, winJar